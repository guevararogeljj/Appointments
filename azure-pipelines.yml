trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.0.x'

- script: dotnet restore
  displayName: 'Restaurar paquetes'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Compilar proyecto'

- script: dotnet publish src/Presentation/Appointments.API/Appointments.API.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/api
  displayName: 'Publicar proyecto'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/api'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/api/Appointments.API.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/api/Appointments.API.zip'
    artifactName: 'api'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'api'
    downloadPath: '$(System.DefaultWorkingDirectory)/api'

- task: AzureRmWebAppDeployment@5
  displayName: "Desplegar API"
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Suscripci√≥n de Azure 1(5dca32b6-0caf-4e1b-ade7-51b7b52dd1fa)'
    appType: 'webAppLinux'
    WebAppName: 'AppointmentsAPI'
    packageForLinux: '$(System.DefaultWorkingDirectory)/api/Appointments.API.zip'
    DeploymentTypeLinux: 'oneDeploy'